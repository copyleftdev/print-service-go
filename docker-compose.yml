version: '3.8'

services:
  # Redis service for queue and cache
  redis:
    image: redis:7-alpine
    container_name: print-service-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - print-service-network

  # Print Service Server
  print-server:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.server
      args:
        VERSION: ${VERSION:-dev}
        BUILD_TIME: ${BUILD_TIME}
        GIT_COMMIT: ${GIT_COMMIT}
    container_name: print-service-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - CONFIG_ENV=${CONFIG_ENV:-development}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./configs:/app/configs:ro
      - print_output:/var/lib/print-service/output
      - print_temp:/tmp/print-service
      - print_logs:/var/log/print-service
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - print-service-network

  # Print Service Worker
  print-worker:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.worker
      args:
        VERSION: ${VERSION:-dev}
        BUILD_TIME: ${BUILD_TIME}
        GIT_COMMIT: ${GIT_COMMIT}
    container_name: print-service-worker
    restart: unless-stopped
    environment:
      - CONFIG_ENV=${CONFIG_ENV:-development}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./configs:/app/configs:ro
      - print_output:/var/lib/print-service/output
      - print_temp:/tmp/print-service
      - print_logs:/var/log/print-service
    depends_on:
      redis:
        condition: service_healthy
      print-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "-f", "worker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - print-service-network

  # Redis Commander (Optional - for Redis management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: print-service-redis-ui
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - print-service-network
    profiles:
      - tools

volumes:
  redis_data:
    driver: local
  print_output:
    driver: local
  print_temp:
    driver: local
  print_logs:
    driver: local

networks:
  print-service-network:
    driver: bridge
